---
title: "Bayesian Re-Analysis of Bempedoic Acid in the Primary and Secondary Prevention Settings"
format: 
  html:
    toc: true
    toc-location: body
    toc-expand: true
    toc-depth: 4
date: 1-6-2024
author:
  - name: "Ahmed Sayed (asu.ahmed.sayed@gmail.com) & James M. Brophy (james.brophy@mcgill.ca)"
    affiliations: "Ain Shams University, Faculty of Medicine &  McGill University Health Center for Health Outcomes Research"
embed-resources: true
theme: lightly
toc-title: Contents
code-fold: true
page-layout: full
editor: visual
editor_options: 
  chunk_output_type: console
---

#### Code to install necessary packages

```{r message = FALSE, warning = FALSE}

#Load the necessary packages (ensure that they are installed on your machine beforehand)
require("brms")
require("dplyr")
require("tidyr")
require("bayestestR")
require("rstan")
require("ggplot2")
require("ggridges")
require("ggpubr")
require("ggsci")
require("ggthemes")
require("ggdist")
require("flextable")
require("officer")
require("stringr")

#Save the stanmodel to hard disk
rstan_options(auto_write = TRUE)
#Allow Stan to use more cores in order to increase computational speed
options(mc.cores = parallel::detectCores())

```

# Data setup & Analysis

#### Code to recreate trial data

```{r}

###Record the number of patients and of events in the primary and secondary prevention subgroups
#Of patients (Table 1 in the NEJM publication)
ba_total_pri <- 2100
placebo_total_pri <- 2106
ba_total_sec <- 4892
placebo_total_sec <- 4872
#of all-cause mortality (ACM) events
ba_acm_pri <- 75 #Abstract of JAMA paper 
placebo_acm_pri <- 109 #Abstract of JAMA paper
ba_acm_sec <- 434 - 75 #Table 2 of NEJM - Abstract of JAMA paper
placebo_acm_sec <- 420 - 109 #Table 2 of NEJM - Abstract of JAMA paper
#of cardiovascular mortality (CVM) events
ba_cvm_pri <- 37 #Abstract of JAMA paper 
placebo_cvm_pri <- 65 #Abstract of JAMA paper
ba_cvm_sec <- 269 - 37 #Table 2 of NEJM - Abstract of JAMA paper
placebo_cvm_sec <- 257 - 65 #Table 2 of NEJM - Abstract of JAMA paper
#of the primary endpoint (four component MACE)
ba_mace_pri <- 111 #Abstract of JAMA paper 
placebo_mace_pri <- 161 #Abstract of JAMA paper
ba_mace_sec <- 819 - 111 #Table 2 of NEJM - Abstract of JAMA paper
placebo_mace_sec <- 927 - 161 #Table 2 of NEJM - Abstract of JAMA paper



###Construct 3 tables reflecting the above information for ACM
#Primary Prevention Table
primary_acm_data <- data.frame(
  prevention_status = "Primary", #Specify that this is for primary prevention
  outcome = c(1,  1, 0, 0), #Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_acm_pri, placebo_acm_pri, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_pri - ba_acm_pri, placebo_total_pri - placebo_acm_pri) #Number of people alive in the BA and placebo arms (total - death)
)
#Secondary Prevention Table
secondary_acm_data <- data.frame(
  prevention_status = "Secondary", #Specify that this is for secondary prevention
  outcome = c(1,  1, 0, 0),#Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_acm_sec, placebo_acm_sec, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_sec - ba_acm_sec, placebo_total_sec - placebo_acm_sec) #Number of people alive in the BA and placebo arms (total - death)
)



#Merge the two tables to recreate the entire trial dataset stratified into primary and secondary prevention
acm_data <- bind_rows(primary_acm_data, secondary_acm_data)
#Expand our aggregated data (so that each row represents a single patient)
acm_data <- acm_data %>% uncount(n)


###Construct two tables reflecting the above information for cardiovascular mortality (CVM)
#Primary Prevention Table
primary_cvm_data <- data.frame(
  prevention_status = "Primary", #Specify that this is for primary prevention
  outcome = c(1,  1, 0, 0), #Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_cvm_pri, placebo_cvm_pri, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_pri - ba_cvm_pri, placebo_total_pri - placebo_cvm_pri) #Number of people alive in the BA and placebo arms (total - death)
)
#Secondary Prevention Table
secondary_cvm_data <- data.frame(
  prevention_status = "Secondary", #Specify that this is for secondary prevention
  outcome = c(1,  1, 0, 0),#Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_cvm_sec, placebo_cvm_sec, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_sec - ba_cvm_sec, placebo_total_sec - placebo_cvm_sec) #Number of people alive in the BA and placebo arms (total - death)
)

#Merge the two tables
cvm_data <- bind_rows(primary_cvm_data, secondary_cvm_data)
#Expand our data (so that each row represents a single patient)
cvm_data <- cvm_data %>% uncount(n)


###Construct two tables reflecting the above information for cardiovascular mortality (CVM)
#Primary Prevention Table
primary_mace_data <- data.frame(
  prevention_status = "Primary", #Specify that this is for primary prevention
  outcome = c(1,  1, 0, 0), #Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_mace_pri, placebo_mace_pri, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_pri - ba_mace_pri, placebo_total_pri - placebo_mace_pri) #Number of people alive in the BA and placebo arms (total - death)
)
#Secondary Prevention Table
secondary_mace_data <- data.frame(
  prevention_status = "Secondary", #Specify that this is for secondary prevention
  outcome = c(1,  1, 0, 0),#Create 2 rows for those who died and 2 for those who lived (stratified by treatment arm)
  ba = c(1, 0, 1, 0), #Create treatment arms (stratified by those who died and those who lived)
  n = c(ba_mace_sec, placebo_mace_sec, #Number of all-cause deaths in the BA and palcebo arms
        ba_total_sec - ba_mace_sec, placebo_total_sec - placebo_mace_sec) #Number of people alive in the BA and placebo arms (total - death)
)

#Merge the two tables
mace_data <- bind_rows(primary_mace_data, secondary_mace_data)
#Expand our data (so that each row represents a single patient)
mace_data <- mace_data %>% uncount(n)
```

#### Code to set model formula and priors

```{r}

#Create formula
formula <- bf( #Set a formula such that:
  outcome ~ #The outcome is modeled as a function of:
    ba + #Assignment to bempedoic acid
    prevention_status #Whether the patient falls under the primary or secondary prevention categories
  + ba*prevention_status #An interaction between the two
)


#Set weak priors (can be changed as necessary; in this example, weak priors were used so as to allow the data from
#this trial only to shape the posterior estimates)
weak_priors <- c(
  prior(normal(0, 10), class = b, coef = "prevention_statusSecondary"), #Prior about BA's Treatment effect. This assumes we have no prior information on the effects of previous CVD on mortality rates and that we estimate it completely from the data.
  prior(normal(0, 10), class = b, coef = "ba"), #Prior about BA's Treatment effect (on primary prevention). This assumes we have no clear sense of the likely range of reductions or increases in mortality likely to be observed.
  prior(normal(0, 10), class = b, coef = "ba:prevention_statusSecondary") #Prior about how secondary prevention status changes BA's effect. This assumes we have no clear sense of the likely extent of interactions likely to be observed.
)
```

#### Code to run models

```{r message = FALSE, warning = FALSE}

#Check if the model data is already present in your working directory (as is the case if you have run this analysis before)
if("Models.RData" %in% dir()) {
load("Models.RData") #If so, load the data to speed up rendering (rather than having to waste time on redoing the same MCMC simulations)
} else {
  #If not, run the models and save them

  #Run the model incorporating both the prior you chose and the data at hand (for all-cause mortality).
  b_model_acm <- brm(data = acm_data, #Use the dataset for ACM
                 family = bernoulli, #Using a bernoulli distribution for the outcome (either dead or alive)
                 formula = formula, #Use our formula
                 seed = 100, #Set seed for reproducibility
                 prior = weak_priors, #Use a weak prior (can be changed as desired)
                 iter = 5000) #Use 5000 iterations per chain
  
  #Run the model for cardiovascular mortality as well
  b_model_cvm <- brm(data = cvm_data, #Use the dataset for CVM
                     family = bernoulli, #Using a bernoulli distribution for the outcome (either dead or alive)
                     formula = formula, #Use our formula
                     seed = 100, #Set seed for reproducibility
                     prior = weak_priors, #Use a weak prior (can be changed as desired)
                     iter = 5000) #Use 5000 iterations per chain
  
  #Run the model for MACE as well
  b_model_mace <- brm(data = mace_data, #Use the dataset for CVM
                     family = bernoulli, #Using a bernoulli distribution for the outcome (either dead or alive)
                     formula = formula, #Use our formula
                     seed = 100, #Set seed for reproducibility
                     prior = weak_priors, #Use a weak prior (can be changed as desired)
                     iter = 5000) #Use 5000 iterations per chain
  #Save the models
  save(list = c("b_model_acm", "b_model_cvm", "b_model_mace"),
       file = "Models.RData")
}

#Once you run this code one time, all of the above models will be saved in a "Models.RData" object so that, when you rerun this code, you do not have to redo the analysis all over (this just serves to save time, especially when computation power is limited).
```

#### Code to obtain posterior probabilities

```{r}
###Obtain posterior probabilities of benefit
##For all-cause mortality
#In the primary prevention setting
pri_acm_prob_benefit <- b_model_acm %>% 
  hypothesis("ba < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1) #Round to 2 decimal places (and show trailing zeros)

#In the secondary prevention setting
sec_acm_prob_benefit <- b_model_acm %>% 
  hypothesis("ba + ba:prevention_statusSecondary < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1) #Round to 2 decimal places (and show trailing zeros)


##For cardiovascular mortality
#In the primary prevention setting
pri_cvm_prob_benefit <- b_model_cvm %>% 
  hypothesis("ba < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1) #Round to 2 decimal places (and show trailing zeros)

#In the secondary prevention setting
sec_cvm_prob_benefit <- b_model_cvm %>% 
  hypothesis("ba + ba:prevention_statusSecondary < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1) #Round to 2 decimal places (and show trailing zeros)


##For MACE
#In the primary prevention setting
pri_mace_prob_benefit <- b_model_mace %>% 
  hypothesis("ba < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1) #Round to 2 decimal places (and show trailing zeros)

#In the secondary prevention setting
sec_mace_prob_benefit <- b_model_mace %>% 
  hypothesis("ba + ba:prevention_statusSecondary < 0") %>% #Use the hypothesis function from brms
  {.$hypothesis$Post.Prob} %>% #Extract the posterior probability 
  {. * 100} %>% #Convert to % for ease of interpretation
  round(., 1) %>% format(., nsmall = 1)

#Calculate the posterior probability of harm (which is the complement of the posterior probability of benefit)
#All-cause mortality
pri_acm_prob_harm <- (100 - as.numeric(pri_acm_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
sec_acm_prob_harm <- (100 - as.numeric(sec_acm_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
#Cardiovascular mortality
pri_cvm_prob_harm <- (100 - as.numeric(pri_cvm_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
sec_cvm_prob_harm <- (100 - as.numeric(sec_cvm_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
#MACE
pri_mace_prob_harm <- (100 - as.numeric(pri_mace_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
sec_mace_prob_harm <- (100 - as.numeric(sec_mace_prob_benefit)) %>% round(., 1) %>% format(., nsmall = 1)
```

#### Code to prepare data for figure and table

```{r}

####Make draws of BA's treatment effect from the posterior distribution 
###For ACM
###Under primary and secondary prevention settings
#Primary
acm_primary_draws <- posterior_linpred(
  b_model_acm, #This is the model we used
  newdata = data.frame(ba = c(1, 0), #Calculate probabilities according to the use (or not) of BA
                       prevention_status = "Primary"), #In primary prevention
  transform = TRUE #Create predictions on the probability (rather than log-odds) scale
)
#Secondary (as above but change prevention status to "secondary")
acm_secondary_draws <- posterior_linpred(
  b_model_acm, newdata = data.frame(ba = c(1, 0), prevention_status = "Secondary"),
  transform = TRUE
)
#The output is the probability (risk) of the outcome (death) with BA (1st column) and without BA (2nd column)


###Calculate the difference between these two probabilities/risks (the risk difference; rd)
acm_primary_draws <- acm_primary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #Dividing one probability by the other yields the rd
                                                                 rr = .[, 1] / .[, 2],
                                                                 prevention_status = "Primary") #Under primary prevention
acm_secondary_draws <- acm_secondary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #As above, this yields the rd
                                                             rr = .[, 1] / .[, 2],
                                                             prevention_status = "Secondary") #Under secondary prevention
#Combine the 2 draws into a single dataframe
acm_draws <- bind_rows(acm_primary_draws, acm_secondary_draws)
###We now have a distribution of risk differences under the primary and secondary prevention settings
###This is needed to for the plot of the distribution of BA's effect that we will create a little further below


###Now, we need to calculate the point estimate for the risk difference and risk ratios and the 95% upper and lower bounds
#For primary prevention
acm_primary_rd <- posterior_summary(acm_primary_draws %>% select(rd))
acm_primary_rr <- posterior_summary(acm_primary_draws %>% select(rr))
#For secondary prevention
acm_secondary_rd <- posterior_summary(acm_secondary_draws %>% select(rd))
acm_secondary_rr <- posterior_summary(acm_secondary_draws %>% select(rr))
#The output is the risk difference under primary and secondary prevention settings

###For CVM
###Under primary and secondary prevention settings
#Primary
cvm_primary_draws <- posterior_linpred(
  b_model_cvm, #This is the model we used
  newdata = data.frame(ba = c(1, 0), #Calculate probabilities according to the use (or not) of BA
                       prevention_status = "Primary"), #In primary prevention
  transform = TRUE #Create predictions on the probability (rather than log-odds) scale
)
#Secondary (as above but change prevention status to "secondary")
cvm_secondary_draws <- posterior_linpred(
  b_model_cvm, newdata = data.frame(ba = c(1, 0), prevention_status = "Secondary"),
  transform = TRUE
)
#The output is the probability (risk) of the outcome (death) with BA (1st column) and without BA (2nd column)


###Calculate the difference between these two probabilities/risks (the risk difference; rd)
cvm_primary_draws <- cvm_primary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #Dividing one probability by the other yields the rd
                                                             rr = .[, 1] / .[, 2],
                                                             prevention_status = "Primary") #Under primary prevention
cvm_secondary_draws <- cvm_secondary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #As above, this yields the rd
                                                                 rr = .[, 1] / .[, 2],
                                                                 prevention_status = "Secondary") #Under secondary prevention
#Combine the 2 draws into a single dataframe
cvm_draws <- bind_rows(cvm_primary_draws, cvm_secondary_draws)
###We now have a distribution of risk differences under the primary and secondary prevention settings
###This is needed to for the plot of the distribution of BA's effect that we will create a little further below


###Now, we need to calculate the point estimate for the risk difference and risk ratios and the 95% upper and lower bounds
#For primary prevention
cvm_primary_rd <- posterior_summary(cvm_primary_draws %>% select(rd))
cvm_primary_rr <- posterior_summary(cvm_primary_draws %>% select(rr))
#For secondary prevention
cvm_secondary_rd <- posterior_summary(cvm_secondary_draws %>% select(rd))
cvm_secondary_rr <- posterior_summary(cvm_secondary_draws %>% select(rr))

#The output is the risk difference under primary and secondary prevention settings


###For MACE
###Under primary and secondary prevention settings
#Primary
mace_primary_draws <- posterior_linpred(
  b_model_mace, #This is the model we used
  newdata = data.frame(ba = c(1, 0), #Calculate probabilities according to the use (or not) of BA
                       prevention_status = "Primary"), #In primary prevention
  transform = TRUE #Create predictions on the probability (rather than log-odds) scale
)
#Secondary (as above but change prevention status to "secondary")
mace_secondary_draws <- posterior_linpred(
  b_model_mace, newdata = data.frame(ba = c(1, 0), prevention_status = "Secondary"),
  transform = TRUE
)
#The output is the probability (risk) of the outcome (death) with BA (1st column) and without BA (2nd column)


###Calculate the difference between these two probabilities/risks (the risk difference; rd)
mace_primary_draws <- mace_primary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #Dividing one probability by the other yields the rdrr = .[, 1] / .[, 2],
                                                             rr = .[, 1] / .[, 2],
                                                             prevention_status = "Primary") #Under primary prevention
mace_secondary_draws <- mace_secondary_draws %>% data.frame %>% mutate(rd = .[, 1] - .[, 2], #As above, this yields the rd
                                                                 rr = .[, 1] / .[, 2],
                                                                 prevention_status = "Secondary") #Under secondary prevention
#Combine the 2 draws into a single dataframe
mace_draws <- bind_rows(mace_primary_draws, mace_secondary_draws)
###We now have a distribution of risk differences under the primary and secondary prevention settings
###This is needed to for the plot of the distribution of BA's effect that we will create a little further below


###Now, we need to calculate the point estimate for the risk difference and the 95% upper and lower bounds
#For primary prevention
mace_primary_rd <- posterior_summary(mace_primary_draws %>% select(rd))
mace_primary_rr <- posterior_summary(mace_primary_draws %>% select(rr))
#For secondary prevention
mace_secondary_rd <- posterior_summary(mace_secondary_draws %>% select(rd))
mace_secondary_rr <- posterior_summary(mace_secondary_draws %>% select(rr))
#The output is the risk difference under primary and secondary prevention settings

#We will now bind the dataframes for the different outcomes together
outcomes_draws <- bind_rows(acm_draws %>% mutate(outcome = "All-cause\nmortality"), 
                            cvm_draws %>% mutate(outcome = "Cardiovascular\nmortality"), 
                            mace_draws %>% mutate(outcome = "Major adverse\ncardiovascular\nevents")
                            )

##We will also bind the dataframes needed to create a table summarizing risk differences and risk ratios
#For primary prevention
primary_df <- rbind(acm_primary_rd %>% data.frame %>% mutate(outcome = "All-cause mortality", group = "Primary prevention", measure = "Risk difference"),
      acm_primary_rr %>% data.frame %>% mutate(outcome = "All-cause mortality", group = "Primary prevention", measure = "Risk ratio"),
      cvm_primary_rd %>% data.frame %>% mutate(outcome = "Cardiovascular mortality", group = "Primary prevention", measure = "Risk difference"), 
      cvm_primary_rr %>% data.frame %>% mutate(outcome = "Cardiovascular mortality", group = "Primary prevention", measure = "Risk ratio"),
      mace_primary_rd %>% data.frame %>% mutate(outcome = "Major adverse cardiovascular events", group = "Primary prevention", measure = "Risk difference"), 
      mace_primary_rr %>% data.frame %>% mutate(outcome = "Major adverse cardiovascular events", group = "Primary prevention", measure = "Risk ratio")
          )
#For secondary prevention
secondary_df <- rbind(acm_secondary_rd %>% data.frame %>% mutate(outcome = "All-cause mortality", group = "Secondary prevention", measure = "Risk difference"),
                    acm_secondary_rr %>% data.frame %>% mutate(outcome = "All-cause mortality", group = "Secondary prevention", measure = "Risk ratio"),
                    cvm_secondary_rd %>% data.frame %>% mutate(outcome = "Cardiovascular mortality", group = "Secondary prevention", measure = "Risk difference"), 
                    cvm_secondary_rr %>% data.frame %>% mutate(outcome = "Cardiovascular mortality", group = "Secondary prevention", measure = "Risk ratio"),
                    mace_secondary_rd %>% data.frame %>% mutate(outcome = "Major adverse cardiovascular events", group = "Secondary prevention", measure = "Risk difference"), 
                    mace_secondary_rr %>% data.frame %>% mutate(outcome = "Major adverse cardiovascular events", group = "Secondary prevention", measure = "Risk ratio")
)

#Bind both dataframes together
summary_df <- bind_rows(primary_df, secondary_df)

##We now have the data needed for our plot and table, which we will produce in the next code block
```

# Table & Figure

#### Code to create the table

```{r}

#Pivot the dataframe such that the type of effect of size is placed as seprate columns rather than as separate rows
summary_df <- summary_df %>%
  pivot_wider(id_cols = c("outcome", "group"),
              names_from = "measure",
              values_from = c("Estimate", "Q2.5", "Q97.5"))

#Make column names easier to reference
summary_df <- summary_df %>% rename(
  rd_pe = "Estimate_Risk difference",
  rd_lci = "Q2.5_Risk difference",
  rd_uci = "Q97.5_Risk difference",
  rr_pe = "Estimate_Risk ratio",
  rr_lci = "Q2.5_Risk ratio",
  rr_uci = "Q97.5_Risk ratio"
)

#Make risk differences percentage points
summary_df <- summary_df %>%
  mutate(across(.cols = contains("rd"), ~ . * 100))

#Round risk differences and risk ratios
summary_df <- summary_df %>%
  mutate(across(.cols = contains(c("rr", "rd")), ~ round(., 2) %>% format(nsmall = 2)))

#Create columns summarising the point estimate and CIs
summary_df <- summary_df %>%
  mutate(rd = paste0(rd_pe, " (", rd_lci, " to ", rd_uci, ")") %>% str_squish,
         rr = paste0(rr_pe, " (", rr_lci, " to ", rr_uci, ")") %>% str_squish)

#Remove the now redundant columns
summary_df <- summary_df %>% select(-contains(c("_pe", "_lci", "_uci")))

summary_df$post_prob_benefit <- NA
summary_df$post_prob_harm <- NA

#Attach posterior probabilities
summary_df[summary_df$group == "Primary prevention" & summary_df$outcome == "All-cause mortality", c("post_prob_benefit", "post_prob_harm")] <- cbind(pri_acm_prob_benefit, pri_acm_prob_harm)
summary_df[summary_df$group == "Secondary prevention" & summary_df$outcome == "All-cause mortality", c("post_prob_benefit", "post_prob_harm")] <- cbind(sec_acm_prob_benefit, sec_acm_prob_harm)
summary_df[summary_df$group == "Primary prevention" & summary_df$outcome == "Cardiovascular mortality", c("post_prob_benefit", "post_prob_harm")] <- cbind(pri_cvm_prob_benefit, pri_cvm_prob_harm)
summary_df[summary_df$group == "Secondary prevention" & summary_df$outcome == "Cardiovascular mortality", c("post_prob_benefit", "post_prob_harm")] <- cbind(sec_cvm_prob_benefit, sec_cvm_prob_harm)
summary_df[summary_df$group == "Primary prevention" & summary_df$outcome == "Major adverse cardiovascular events", c("post_prob_benefit", "post_prob_harm")] <- cbind(pri_mace_prob_benefit, pri_mace_prob_harm)
summary_df[summary_df$group == "Secondary prevention" & summary_df$outcome == "Major adverse cardiovascular events", c("post_prob_benefit", "post_prob_harm")] <- cbind(sec_mace_prob_benefit, sec_mace_prob_harm)


#Rename column names to make them fit for publication
summary_df <- summary_df %>% rename(
  "Outcome" = outcome,
  "Subgroup" = group,
  "Risk difference in percentage points (95% credible interval)" = rd,
  "Risk ratio (95% credible interval)" = rr,
  "Posterior probability of any benefit (%)" = post_prob_benefit,
  "Posterior probability of any harm (%)" = post_prob_harm
)

#Rearrange to make alphabetically ACM come first
summary_df <- summary_df %>% arrange(Outcome)

#Convert to flextable
summary_table <- summary_df %>% flextable
#Put borders
summary_table <- summary_table %>% border_inner %>% border_outer
#Merge replicated outcome labels
summary_table <- summary_table %>% merge_v("Outcome")

#Bold
summary_table <- bold(summary_table, j = 1, part = "all")
summary_table <- bold(summary_table,  part = "header")

#Align
summary_table <- align(summary_table, part = "all", align = "center")

#Table heading
summary_table <- set_caption(summary_table, 
                             caption = "Table. Absolute and relative effects of bempedoic acid on all-cause mortality, cardiovascular mortality, and major adverse cardiovascular events.")

summary_table <- footnote(summary_table, 
         j = which(colnames(summary_df) %>% str_detect("Posterior probability")),
         part = "header",
         ref_symbols = "*",
         value = as_paragraph("These 2 probabilities are complements of one another (that is, the posterior probability of benefit = 1 - posterior probability of harm and vice versa)")
         )

summary_table <- footnote(summary_table, 
         j = which(colnames(summary_df) %>% str_detect("Risk")),
         part = "header",
         ref_symbols = "\U271D",
         value = as_paragraph("Reported values represent posterior means accopmanied with 95% credible intervals between parentheses.")
         )

#Now, produce the table in Quarto and save it as a word document
summary_table %>% width(width = 3)
save_as_docx(width(summary_table, width = 1.6), path = "Table.docx")

```

#### Code to plot the posterior distribution of ARD

```{r fig.width = 16, fig.height = 9, message = FALSE}
#Create title and subtitles for the plot
main_title <- "Effect of bempedoic acid on all-cause mortality, cardiovascular mortality, and major adverse cardiovascular events in the\nprimary and secondary prevention settings"
subtitle_p1 <- "Effects were obtained from a binomial logistic regression model (using a logit link) with the binary outcome as a dependent variable and use of bempedoic acid, primary versus secondary prevention status, and an interaction term as independent variables."
subtitle_p2 <- "For all analyses, the prior on all parameters was a weakly informative normal distribution with a mean of 0 and a standard deviation of 10. The model output (originally differences in log-odds) was converted to risk differences to facilitate interpretation."
subtitle_p3 <- "Points and intervals represent the posterior means and 95% credible intervals respectively."


#Now, we will plot
post_dist_plot <- ggplot(data = outcomes_draws,
       aes(y = outcome,
           x = rd*100,
           fill = prevention_status,
           color = prevention_status
       )) +
  #Add Density plots
  stat_halfeye(alpha = 0.8,
               point_interval = "mean_qi",
               .width = 0.95,
               fatten_point = 6,
               linewidth = 8,
               normalize = "xy") +
  #Set colors
  scale_fill_tableau(name = "") +
  scale_color_tableau(name = "") +
  #Create title
  ggtitle(main_title,
          subtitle = paste0(subtitle_p1, "\n", subtitle_p2,"\n", subtitle_p3)) +
  geom_vline(xintercept = 0, color = "black", 
             lwd = 1, linetype = 2) +
  #Set x-axis limit
  # coord_cartesian(xlim = c(0.1, 10)) +
  #X and Y axes aesthetics
  scale_y_discrete(name = NULL, expand = c(0, 0.1)) +
  scale_x_continuous(name = "Risk difference (percentage points)",
                     breaks = seq(-10, 10, 1),
                     expand = c(0, 0.1)) +
  #Set theme
  theme_pubclean() +
  theme(text = element_text(size = 23),
        plot.title=element_text(face = "bold", hjust = 0.0, size = 16),
        plot.subtitle = element_text(face = "bold", size = 8, hjust = 0.0, color = "grey45"),
        axis.text.x = element_text(size = 20, face = "bold"),
        axis.text.y = element_text(size = 15, face = "bold", hjust = 0.5),
        axis.title.x = element_text(size = 25, face = "bold"),
        axis.title.y = element_blank(),
        axis.line = element_line(colour = "black", linewidth = 1.2),
        plot.margin = margin(0.2, 0.3, 0, 0.2, "cm"),
        legend.background = element_rect(fill = "transparent"),
        legend.position = "bottom",
        legend.text = element_text(size = 16, face = "bold"),
        legend.key.width = unit(1.5, "cm"),
        legend.key.height = unit(0.75, "cm")
        )

#Plot & Save figure
post_dist_plot
ggsave(plot = post_dist_plot,
       filename = "Figure.pdf",
       dpi = 600,
       width = 16,
       height = 9)
```
